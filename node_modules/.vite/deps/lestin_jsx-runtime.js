import "./chunk-RSJERJUL.js";

// node_modules/lestin/jsx-runtime.mjs
function e(e2, t2, s) {
  let n = t2.children || [];
  if (delete t2.children, Array.isArray(n) || (n = [n]), n.forEach((e3, t3, r2) => {
    "number" == typeof e3 || e3 && 0 != e3 || r2.splice(t3, 1);
  }), "function" == typeof e2)
    return e2(t2, ...n);
  let a = document.createElement(e2);
  return Object.entries(t2).forEach(([e3, t3]) => {
    if (e3 && (t3 || "number" == typeof t3))
      if (e3.startsWith("on") && e3.toLowerCase() in window) {
        let r2 = e3.toLowerCase().substring(2);
        Array.isArray(t3) ? t3.forEach((e4) => {
          r2 && e4 && a.addEventListener(r2, e4);
        }) : r2 && t3 && a.addEventListener(r2, t3);
      } else
        "style" === e3 ? "string" == typeof t3 ? a.style.cssText = t3 : Object.assign(a, t3) : "innerHTML" === e3 ? a.innerHTML = t3 : "htmlFor" === e3 && a instanceof HTMLLabelElement ? a.htmlFor = t3 : "className" === e3 || "class" === e3 ? a.className = t3 : "data" === e3 || "dataset" === e3 ? Object.assign(a.dataset, t3) : a.setAttribute(e3, t3.toString());
  }), n == null ? void 0 : n.forEach((e3) => r(a, e3)), a;
}
var t = (e2, ...t2) => t2;
function r(e2, t2) {
  Array.isArray(t2) ? t2.forEach((t3) => r(e2, t3)) : t2 instanceof HTMLElement ? e2.appendChild(t2) : e2.appendChild(document.createTextNode(t2));
}
export {
  t as Fragment,
  r as appendChild,
  e as createElement,
  e as jsx,
  e as jsxDEV,
  e as jsxs
};
//# sourceMappingURL=lestin_jsx-runtime.js.map
