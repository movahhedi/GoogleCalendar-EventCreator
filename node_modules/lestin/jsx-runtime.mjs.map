{"version":3,"file":"jsx-runtime.mjs","sources":["../src/jsx-runtime.ts"],"sourcesContent":["/// <reference path=\"jsx-runtime.d.ts\" />\r\n\r\nexport function createElement<P extends {}>(type: (props?: (Lestin.Attributes & P) | null, children?: Lestin.LestinNode) => Lestin.LestinNode, props?: (Lestin.Attributes & P) | null, ...children: HTMLElement[]): Lestin.LestinNode;\r\nexport function createElement<P extends Lestin.DOMAttributes<T>, T extends HTMLElement>(type: string, props?: (Lestin.HTMLAttributes<T> & P) | null, children?: Lestin.LestinNode): Lestin.LestinNode;\r\nexport function createElement<P extends Lestin.HTMLAttributes<T>, T extends Lestin.LestinNode>(type: keyof JSX.IntrinsicElements, props?: (Lestin.HTMLAttributes<T> & P) | null, children?: Lestin.LestinNode): Lestin.LestinNode;\r\nexport function createElement<P extends Lestin.HTMLAttributes<T>, T extends Lestin.LestinNode>(type: string | keyof JSX.IntrinsicElements | ((props?: (Lestin.Attributes & P) | null, children?: Lestin.LestinNode) => Lestin.LestinNode), props?: (Lestin.HTMLAttributes<T> & P) | null, children?: Lestin.LestinNode): Lestin.LestinNode {\r\n\r\n\tlet newChildren = props.children || [];\r\n\tdelete props[\"children\"];\r\n\r\n\tif ( ! Array.isArray(newChildren)) {\r\n\t\tnewChildren = [newChildren];\r\n\t}\r\n\r\n\tnewChildren.forEach((child: any, index: any, object: any) => {\r\n\t\tif (typeof child !== \"number\" && (!child || child == false)) {\r\n\t\t\tobject.splice(index, 1);\r\n\t\t}\r\n\t});\r\n\r\n\tif (typeof type === \"function\") return type(props, ...newChildren);\r\n\r\n\tlet element: HTMLElement = document.createElement(type);\r\n\r\n\tObject.entries(props).forEach(([name, value]) => {\r\n\r\n\t\tif (!name || (!value && typeof value !== \"number\")) return;\r\n\r\n\t\tif (name.startsWith(\"on\") && name.toLowerCase() in window) {\r\n\t\t\tlet EventName = name.toLowerCase().substring(2);\r\n\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\tvalue.forEach((value_i) => {\r\n\t\t\t\t\tif (EventName && value_i) {\r\n\t\t\t\t\t\telement.addEventListener(EventName, value_i);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else if (EventName && value) {\r\n\t\t\t\telement.addEventListener(EventName, value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse if (name === \"style\") {\r\n\t\t\tif (typeof value === \"string\") element.style.cssText = value;\r\n\t\t\telse Object.assign(element, value);\r\n\t\t\t// else Object.assign(element.style, value);\r\n\t\t}\r\n\r\n\t\telse if (name === \"innerHTML\") element.innerHTML = value;\r\n\t\telse if (name === \"htmlFor\" && element instanceof HTMLLabelElement) element.htmlFor = value;\r\n\t\telse if (name === \"className\" || name === \"class\") element.className = value;\r\n\t\telse if (name === \"data\" || name === \"dataset\") Object.assign(element.dataset, value);\r\n\r\n\t\t// else if (name.startsWith(\"func\") && typeof value === \"function\") element[name.substring(4)] = value;\r\n\r\n\t\t/*else if (name !== name.toLowerCase()) {\r\n\t\t\tlet att = document.createAttribute(name);\r\n\t\t\tatt.value = value as string;\r\n\t\t\telement.setAttributeNode(att);\r\n\t\t}*/\r\n\r\n\t\t/*else if (type == \"svg\" || type == \"path\" || type == \"circle\") {\r\n\t\t\tif (name == \"xmlns\") element.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns\", \"http://www.w3.org/2000/svg\");\r\n\t\t\telse element.setAttributeNS(null, name, value.toString());\r\n\t\t}*/\r\n\r\n\t\t// else if (name === \"children\") {}\r\n\r\n\t\telse element.setAttribute(name, value.toString());\r\n\t});\r\n\r\n\tnewChildren?.forEach((child: any) => appendChild(element, child));\r\n\r\n\treturn element;\r\n}\r\n\r\nexport const Fragment = (props: any, ...children: any) => children;\r\n\r\nexport function appendChild(parent: HTMLElement, text: string): void;\r\nexport function appendChild(parent: HTMLElement, child: HTMLElement): void;\r\nexport function appendChild(parent: HTMLElement, childOrText: HTMLElement | string): void {\r\n\r\n\tif (Array.isArray(childOrText)) {\r\n\t\tchildOrText.forEach((nestedChild) => appendChild(parent, nestedChild));\r\n\t}\r\n\telse if (childOrText instanceof HTMLElement) {\r\n\t\tparent.appendChild(childOrText);\r\n\t}\r\n\telse {\r\n\t\tparent.appendChild(document.createTextNode(childOrText));\r\n\t}\r\n}\r\n\r\nexport {\r\n\tcreateElement as jsx,\r\n\tcreateElement as jsxs,\r\n\tcreateElement as jsxDEV,\r\n};\r\n"],"names":["createElement","type","props","children","newChildren","Array","isArray","forEach","child","index","object","splice","element","document","Object","entries","name","value","startsWith","toLowerCase","window","EventName","substring","value_i","addEventListener","style","cssText","assign","innerHTML","HTMLLabelElement","htmlFor","className","dataset","setAttribute","toString","appendChild","Fragment","parent","childOrText","nestedChild","HTMLElement","createTextNode"],"mappings":"AAKgB,SAAAA,EAA+EC,EAA4IC,EAA+CC,GAErR,IAAAC,EAAcF,EAAMC,UAAY,GAapC,UAZOD,EAAgB,SAEhBG,MAAMC,QAAQF,KACpBA,EAAc,CAACA,IAGhBA,EAAYG,SAAQ,CAACC,EAAYC,EAAYC,KACvB,iBAAVF,GAAwBA,GAAkB,GAATA,GACpCE,EAAAC,OAAOF,EAAO,EACtB,IAGmB,mBAATR,EAA4B,OAAAA,EAAKC,KAAUE,GAElD,IAAAQ,EAAuBC,SAASb,cAAcC,GAkD3C,OAhDAa,OAAAC,QAAQb,GAAOK,SAAQ,EAAES,EAAMC,MAErC,GAAKD,IAAUC,GAA0B,iBAAVA,GAE/B,GAAID,EAAKE,WAAW,OAASF,EAAKG,gBAAiBC,OAAQ,CAC1D,IAAIC,EAAYL,EAAKG,cAAcG,UAAU,GACzCjB,MAAMC,QAAQW,GACXA,EAAAV,SAASgB,IACVF,GAAaE,GACRX,EAAAY,iBAAiBH,EAAWE,EACrC,IAESF,GAAaJ,GACfL,EAAAY,iBAAiBH,EAAWJ,EACrC,KAGiB,UAATD,EACa,iBAAVC,EAAoBL,EAAQa,MAAMC,QAAUT,EAC3CH,OAAAa,OAAOf,EAASK,GAIX,cAATD,EAAsBJ,EAAQgB,UAAYX,EACjC,YAATD,GAAsBJ,aAAmBiB,iBAAkBjB,EAAQkB,QAAUb,EACpE,cAATD,GAAiC,UAATA,EAAkBJ,EAAQmB,UAAYd,EACrD,SAATD,GAA4B,YAATA,EAA2BF,OAAAa,OAAOf,EAAQoB,QAASf,GAiB1EL,EAAQqB,aAAajB,EAAMC,EAAMiB,WAAU,IAGjD9B,GAAaG,SAASC,GAAe2B,EAAYvB,EAASJ,KAEnDI,CACR,CAEa,MAAAwB,EAAW,CAAClC,KAAeC,IAAkBA,EAI1C,SAAAgC,EAAYE,EAAqBC,GAE5CjC,MAAMC,QAAQgC,GACjBA,EAAY/B,SAASgC,GAAgBJ,EAAYE,EAAQE,KAEjDD,aAAuBE,YAC/BH,EAAOF,YAAYG,GAGnBD,EAAOF,YAAYtB,SAAS4B,eAAeH,GAE7C"}